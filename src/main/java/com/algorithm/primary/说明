1 - 算阶乘
2 - 选择排序 - 选一个最小数放在0位置，再选一个到1位置
3 - 冒泡排序 - 相邻两个数比较，小的放左边
4 - 插入排序 - 拿到一个数，和他左边所有数比较，放到合适位置
------------------------------------------------------------------------------------------
选择排序和冒泡排序区别：选择是选最小的值，放到第一位，然后循环。冒泡是相邻两个值相比，大的放后面。
------------------------------------------------------------------------------------------
链表
5 - Math方法
6 - 对数器
7 - 等概率返回问题
8 - 单链表
9 - 双链表
10 - leecode 25 k个节点组内逆序
11 - leecode 2 两个单链表想加
12 - leecode 21 将两个升序链表合并为一个新的 升序 链表并返回
------------------------------------------------------------------------------------------
位图
13 - 用int数组存一个数字，只能判断存不存在，不能确定值是什么
----------------------------
位运算
& 与----有0为0，全1为1
| 或----有1为1，全0为0
~ 非----反过来，0得1，1得0
^ 异或--相同为0，不同为1
----------------------------
14 - 位运算做加减乘除
----------------------------
15 - 比较器 - 给任意数组排序
16 - 比较两个二叉树是否完全相等
17 - 返回一个二叉树的最大深度
18 - 从前序与中序遍历序列构造二叉树
19 - 二叉树遍历收集 102题
20 - 判断一个树是否是平衡二叉树
平衡二叉树：每棵子树的左边层高 - 右边层高 的绝对值 <= 1
21 - 是否是搜索二叉树 - 98
搜索二叉树：每颗子树都是左边<头<右边 ，都符合就是搜索二叉树
22 - 能否组成路径和 112
23 - 拿到所有路径和  113
24 -
25 - 快排



------------
^ 的题   2个数，a和b出现了奇数次，其他数出现偶数次，怎么得到a和b
1、全部异或一边，得到 x = a^b   因为自己^自己 = 0 所以偶数的都没了，只剩下奇数
2、w = x ^ （-x） 得到最右边为1的一个数 w。拿到二进制位最右边不为1的，因为 a != b 所以^ 完肯定不是0，二进制存在1，
为了省事，就定义下拿最右边的1，其他为0的一个数，因为拿起来简单。
w一定变成了除了最右位置是1 其他为0的数
3、所以这些数能分成 最右位置为1 和不为1的两类，并且a和b分别在两边。
4、这样，任意^一边，去掉偶数，得到 a ，在和x^，得到b


